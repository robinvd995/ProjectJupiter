#pragma once

#include "JupiterEngine/JupiterEngine.h"

/**
 * How to adress a resource? dont want strings because they are more expansive to compare.
 * Ideally each resource will be called by an integer, that can be used in a lookup table to get the location of the resource on disk.
 * Preprocessing needs to be done if this is the case, which will Require ProjectIo to do so.
 * A lookup table needs to be generated by ProjectIo.
 * A list of constexpr of defines also needs to be generated to link the integer ids of the resource to a more descriptive name, 
 * probaby the named id of the resource.
*/

namespace Jupiter {

	/// <summary>
	/// 
	/// </summary>
	enum class EnumResourceType {
		UNDEFINED = 0,
		MODEL = 1,
		SHADER = 2,
		TEXTURE = 3,

		ENUM_RESOURCE_TYPE_SIZE
	};

	/// <summary>
	/// 
	/// </summary>
	struct Resource {
		/// <summary>
		/// 
		/// </summary>
		EnumResourceType m_Type;

		/// <summary>
		/// 
		/// </summary>
		uint ptr;
	};

	/// <summary>
	/// 
	/// </summary>
	class ResourceManager {



	};
}
